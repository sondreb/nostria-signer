name: Build and Release

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Is this a pre-release?'
        type: boolean
        default: false

# Add permissions needed for creating releases
permissions:
  contents: write
  packages: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            build-type: desktop
          - platform: windows-latest
            build-type: desktop
          - platform: ubuntu-latest
            build-type: desktop
          - platform: ubuntu-latest
            build-type: android

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Variables
        run: |
          echo VERSION=$(npm run get-version --silent) >> $GITHUB_ENV
        shell: bash
    
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        if: matrix.build-type != 'android'

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest' && matrix.build-type == 'desktop'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # Android specific setup
      - name: Setup Java
        if: matrix.build-type == 'android'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Android SDK
        if: matrix.build-type == 'android'
        uses: android-actions/setup-android@v2

      - name: Install Android NDK
        if: matrix.build-type == 'android'
        run: |
          sdkmanager --install "ndk;25.2.9519653"
          echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Install Rust targets for Android
        if: matrix.build-type == 'android'
        run: |
          rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android

      - name: Install dependencies
        run: npm install

      - name: Build Tauri app (Desktop)
        if: matrix.build-type == 'desktop'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ env.VERSION }}
          releaseName: "Nostria Signer v${{ env.VERSION }}"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: ${{ github.event.inputs.prerelease }}

      - name: Setup Android keystore
        if: matrix.build-type == 'android'
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android.keystore
          echo "KEYSTORE_PATH=$(pwd)/android.keystore" >> $GITHUB_ENV
        shell: bash

      # Create a dedicated directory for mobile configurations
      - name: Create mobile config directory
        if: matrix.build-type == 'android'
        run: |
          mkdir -p src-tauri/gen/android
        shell: bash

      # Create the proper key.properties file in the correct location
      - name: Create key.properties for Android
        if: matrix.build-type == 'android'
        run: |
          cat > src-tauri/gen/android/key.properties << EOF
          storeFile=${{ env.KEYSTORE_PATH }}
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          EOF
        shell: bash

      # Create mobile specific Tauri config
      - name: Configure mobile.json for Android
        if: matrix.build-type == 'android'
        run: |
          cat > src-tauri/gen/android/mobile.json << EOF
          {
            "app": {
              "bundleIdentifier": "no.brainbox.nostria-signer"
            },
            "build": {
              "beforeBuildCommand": "npm run build",
              "frontendDist": "../dist/app/browser"
            },
            "android": {
              "signing": {
                "keystore": "${{ env.KEYSTORE_PATH }}",
                "keystorePassword": "${{ secrets.KEYSTORE_PASSWORD }}",
                "keyAlias": "${{ secrets.KEY_ALIAS }}",
                "keyPassword": "${{ secrets.KEY_PASSWORD }}"
              }
            }
          }
          EOF
        shell: bash

      - name: Build Android app
        if: matrix.build-type == 'android'
        run: |
          npm run tauri android build -- --release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NDK_HOME: ${{ env.NDK_HOME }}
          # Only include relevant Android signing variables
          ANDROID_KEYSTORE_PATH: ${{ env.KEYSTORE_PATH }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Rename Android artifacts
        if: matrix.build-type == 'android'
        run: |
          mkdir -p renamed
          find src-tauri/gen/android/app/build/outputs/apk/universal/release -name "*.apk" -exec cp {} renamed/nostria-signer_${{ env.VERSION }}.apk \;
          find src-tauri/gen/android/app/build/outputs/bundle/universalRelease -name "*.aab" -exec cp {} renamed/nostria-signer_${{ env.VERSION }}.aab \;
        shell: bash

      - name: Upload Android artifacts to release
        if: matrix.build-type == 'android'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          draft: true
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            renamed/nostria-signer_${{ env.VERSION }}.apk
            renamed/nostria-signer_${{ env.VERSION }}.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}